networks:
  rulehub-net:
    driver: bridge
    attachable: true

volumes:
  postgres-data:
  minio-data:

services:
  backend:
    image: "ghcr.io/nrf24l01/rulehub/rulehub-backend:latest"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:1324/ping"]
      interval: 10s
      retries: 30
      timeout: 3s
      start_period: 10s
    restart: "no"
    expose:
      - "1324"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - POSTGRES_TIMEZONE=Europe/Moscow
      - MINIO_ENDPOINT=minio:9000
      - MINIO_USERNAME=minioadmin
      - MINIO_PASSWORD=minioadmin
      - MINIO_BUCKET=rulehub
      - RUNTIME_PRODUCTION=true
    depends_on:
      postgres:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully
      minio:
        condition: service_healthy
    networks:
      - rulehub-net

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    expose:
      - "5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rulehub-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    command: ["postgres", "-c", "listen_addresses=*"]
  
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    expose:
      - "9000"
    command: server /data
    volumes:
      - minio-data:/data
    networks:
      - rulehub-net
  
  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/rulehub;
      /usr/bin/mc anonymous set download myminio/rulehub;
      exit 0;
      "
    networks:
      - rulehub-net
  
  watchtower:
    image: containrrr/watchtower
    container_name: rulehub-watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  frontend:
    image: ghcr.io/nrf24l01/rulehub/rulehub-frontend:stable
    env_file:
      - .env
    expose:
      - "8001"
    networks:
      - rulehub-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8001/"]
      interval: 60s
      retries: 30
      timeout: 3s
      start_period: 10s
  
  nginx:
    image: nginx:stable-alpine
    ports:
      - "9003:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - rulehub-net